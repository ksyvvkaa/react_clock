{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","toUTCString","slice","timerId","this","window","setInterval","newTime","setState","console","info","clearInterval","name","props","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","nameTimerId","_","prevState","debug","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,MAAQ,CACNC,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAFtD,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMC,GAAU,IAAIP,MAAOC,cAAcC,OAAO,IAAK,GAErD,EAAKM,SAAS,CAAET,YAAaQ,IAE7BE,QAAQC,KAAKH,KACZ,OAdP,kCAiBE,WACEF,OAAOM,cAAcP,KAAKD,WAlB9B,oBAqBE,WACE,IAAQS,EAASR,KAAKS,MAAdD,KAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGV,KAAKN,MAAMC,qBAjCtB,GAA2BgB,IAAMC,WCFjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWlB,OAAO,GAE3C,MAAM,SAAN,OAAgBgB,GAyCX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVC,UAAW,WAHf,EAMEC,YAAcnB,OAAOC,aAAY,WAC/B,EAAKE,SAAS,CAAEe,UAAWN,QAC1B,MARL,wDAUE,SAAmBQ,EAAOC,GACpBtB,KAAKN,MAAMwB,UAAYlB,KAAKN,MAAMyB,YAAcG,EAAUH,WAE5Dd,QAAQkB,MAAR,uBAA8BD,EAAUH,UAAxC,eAAwDnB,KAAKN,MAAMyB,cAbzE,oBAiBE,WAAU,IAAD,OAWP,OAVAK,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKvB,SAAS,CAAEc,UAAU,OAG5BM,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEc,UAAU,OAI1B,sBAAKR,UAAU,MAAf,UACE,6CAECV,KAAKN,MAAMwB,UAAY,cAAC,EAAD,CAAOV,KAAMR,KAAKN,MAAMyB,mBAhCxD,GAAyBR,IAAMC,WC7C/BgB,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.d1186ed4.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    currentTime: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      const newTime = new Date().toUTCString().slice(-12, -4);\n\n      this.setState({ currentTime: newTime });\n      // eslint-disable-next-line no-console\n      console.info(newTime);\n    }, 1000);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\n/* export const App: React.FC = () => {\n  const today = new Date();\n  let clockName = 'Clock-0';\n\n  // This code starts a timer\n  const timerId = window.setInterval(() => {\n    clockName = getRandomName();\n  }, 3300);\n\n  // this code stops the timer\n  window.clearInterval(timerId);\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n\n      <Clock />\n    </div>\n  );\n}; */\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends React.Component {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  nameTimerId = window.setInterval(() => {\n    this.setState({ clockName: getRandomName() });\n  }, 3300);\n\n  componentDidUpdate(_: {}, prevState: Readonly<State>): void {\n    if (this.state.hasClock && this.state.clockName !== prevState.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  render() {\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}